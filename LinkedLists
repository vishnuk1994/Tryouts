#include <iostream>
using namespace std;

struct Node
{
    int data;
    Node* next;
};

class LinkedList
{
    private:
        Node* head;
        Node* tail;
        LinkedList (LinkedList &ob) {}
    
    public:
        LinkedList()
        {
            head = NULL;
            tail = NULL;
        }
        
        void push ( int data )
        {
            Node *newNode = new Node();
            newNode->data = data;
            newNode->next = NULL;
            if (head == NULL)
            {
                head = newNode;
                tail = newNode;
            }
            else
            {
                tail->next = newNode;
                tail = tail->next;
            }
        }
        
        void display()
        {
            Node *newNode = head;
            while(newNode != NULL)
            {
                cout << newNode->data << endl;
                newNode = newNode->next;
            }
            delete(newNode);
        }
        
        Node* getIndexEl(int indx)
        {
            Node *newNode = head;
            int count = 0;
            while(newNode != NULL )
            {
                if (count == indx)
                    return newNode;
                newNode = newNode->next;
                count++;
            }
            delete(newNode);
            return NULL;
        }
        
        Node* GetMiddleEl()
        {
            Node* n1 = new Node();
            n1 = head;
            if (n1 == NULL)
            {
                return NULL;
            }
            
            Node* n2 = new Node();
            n2 = head;
            while(n2 != NULL && n2->next != NULL)
            {
                n1 = n1->next;
                n2 = n2->next->next;
                //cout << n1->data <<  "   " << n2->data <<endl;
            }
            delete(n2);
            return n1;
        }
};

int main() {
	// your code goes here
	LinkedList newNode;
	newNode.push(1);
	newNode.push(3);
	newNode.push(6);
	newNode.push(7);
	newNode.push(9);
	newNode.push(0);
	newNode.push(10);
	//newNode.push(71);
	newNode.display();
	int index = 2;
	Node* el = newNode.getIndexEl(index);
	if ( NULL !=  el)
	{
	    cout << "// data at index ("<<index <<") is : " << el->data <<endl;
	}
	else
	{  
	    cout << "// data at index ("<<index <<") is not present" <<endl;
	}
	
	Node* mid = newNode.GetMiddleEl();
	cout << "// mid el : "<<mid->data<<endl;
	return 0;
}
